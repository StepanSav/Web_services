Проверить всё ли нормально в работает связка веб сервисов.
—---------
Endpoint / -  GET http://162.55.220.72:5031/ 
Проверка работоспособности.
Возвращает текст – ‘Check + !’
—----------
Endpoint / -  GET http://162.55.220.72:5031/ all_jobs
Возвращает список заявок на вакансии в виде json.
GET http://23.88.52.139:5041/all_jobs 
Принимает от клиента запрос методом GET, без параметров.
Отравляет GET запрос в WS_2 - http://49.13.144.122:5032/get_all_jobs без араметров.
В ответ получает список заявок на вакансии в виде json.
Пересылает список заявок на вакансии в виде json на клиент.
—-----------------
WS_1 получает запрос от клиента. 
Никаких параметров не нужно
WS_1 отправляет запрос на WS_2
23.88.52.139:5032/get_jobs_count


WS_2 получает запрос от WS_1
WS_2 парсит json, в которой 7 вакансий и считает количество вакансий. По умолчанию в json 7 вакансий.
WS_2 отправляет ответ на WS_1 в котором будет json {“jobs_count”:7}
WS_1 получает ответ от WS_2 и отправляет json {“jobs_count”:7} клиенту.
—-----------------------------
Endpoint /all_jobs
162.55.220.72:5021/all_jobs
POST. 
WS_1 получает запрос от клиента. 
Никаких параметров не нужно
WS_1 отправляет запрос на WS_2

WS_2 получает запрос от WS_1
WS_2 парсит json, в которой 7 вакансий и считает количество вакансий. По умолчанию в json 7 вакансий.
WS_2 отправляет ответ на WS_1 в котором будет json + все добавленные пользователем вакансии.
WS_1 получает ответ от WS_2 и отправляет json клиенту.
—-----------------------------

Endpoint /add_job
162.55.220.72:5021/add_job
POST. 
WS_1 получает запрос от клиента в теле которого должна быть json-ка
 {"firm_title": “firm_title”,
"position_title": “position_title”,
"skills": [“skill_1”, “skill_2”, “skill_3”]
 "description": description,
"Job Posting": job_posting,
"Employee Status": employee_status}
WS_1 отправляет запрос на WS_2
23.88.52.139:5032/add_job_item
В теле запроса должен быть json полученный от клиента.
 {"firm_title": “firm_title”,
"position_title": “position_title”,
"skills": [“skill_1”, “skill_2”, “skill_3”]
 "description": description,
"Job Posting": job_posting,
"Employee Status": employee_status}

WS_2 получает запрос от WS_1
WS_2 парсит json, в которой 7 вакансий и считает количество вакансий. По умолчанию в json 7 вакансий.
WS_2 добавляет в  json присланную из WS_1 json.
У добавленной вакансии будет id = +1 к общему количеству вакансий в json (n+1)

WS_2 отправляет ответ на WS_1 в котором будет json
{"result_message":"Job added. Job id is 8",
"check_message": "call /all_jobs endpoint for checking."}

